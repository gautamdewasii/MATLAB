function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 17-Jan-2024 10:21:02.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 1xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = 0;
x1_step1.gain = 0.318309886183791;
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.0958571740994358379;-0.055613947053640311324;-4.9991644963042887184];
IW1_1 = [3.8272936415745597571;3.9334548856241853265;-5.7123189273914762865];

% Layer 2
b2 = [1.4826089810916411871;-0.072341837094799715802;2.982791403467019542;2.0928980852976253324];
LW2_1 = [-1.0707970607877037583 1.8142479586319810725 4.3590161527909607742;-1.2861300592406461618 1.1046095124041219737 0.79655132770479575299;-3.3247587961393207934 0.30942916926451125015 -2.7853824427313935708;2.1213155339272922184 -1.5344113145030096046 0.41348663599433493898];

% Layer 3
b3 = -0.4315086803853371844;
LW3_2 = [-2.1438514155860453059 -2.6260003940532161693 1.0151245284219918563 2.9859607859183552314];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1.0005140479088;
y1_step1.xoffset = -0.999486216200688;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = logsig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);

% Layer 3
a3 = repmat(b3,1,Q) + LW3_2*a2;

% Output 1
y1 = mapminmax_reverse(a3,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
